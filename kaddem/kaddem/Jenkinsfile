pipeline {
    agent any

    environment {
        SONARQUBE = 'sonarkhalil' // Nom de l'installation SonarQube dans Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/khalilayari']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/khalil27/4TWIN2-G6-Kaddem.git',
                        credentialsId: 'git1234'
                    ]]
                ])

                sh '''
                    echo "Workspace contents:"
                    ls -la

                    echo "Looking for build files:"
                    find . -name "pom.xml" -o -name "build.gradle"
                '''
            }
        }

        stage('Download Maven') {
            steps {
                sh '''
                    mkdir -p $HOME/maven-local

                    if [ ! -f $HOME/maven-local/bin/mvn ]; then
                        echo "Downloading Maven..."
                        wget https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz
                        tar -xzf apache-maven-3.9.6-bin.tar.gz -C $HOME/maven-local --strip-components=1
                        rm apache-maven-3.9.6-bin.tar.gz
                    fi

                    $HOME/maven-local/bin/mvn -version
                '''
            }
        }

stage('Build') {
    steps {
        sh '''
            # Afficher la structure des r√©pertoires pour v√©rifier le bon emplacement
            echo "Affichage de la structure du r√©pertoire :"
            ls -la

            # V√©rifier si pom.xml est pr√©sent dans le sous-dossier kaddem/kaddem
            POM_FILE="kaddem/kaddem/pom.xml"
            
            if [ -f "$POM_FILE" ]; then
                echo "Building Maven project in: kaddem/kaddem"
                cd kaddem/kaddem
                $HOME/maven-local/bin/mvn clean package -DskipTests
            else
                echo "No pom.xml found in kaddem/kaddem!"
                exit 1
            fi
        '''
    }
}

        stage('MVN Sonarqube') {
            steps {
                withCredentials([string(credentialsId: 'git12345', variable: 'SONAR_TOKEN')]) {
                    withSonarQubeEnv("${SONARQUBE}") {
                        sh '''
                            POM_DIR=$(cat /tmp/pom_path.txt)
                            cd "$POM_DIR"

                            echo "üìä Lancement de l‚Äôanalyse SonarQube dans $POM_DIR"

                            $HOME/maven-local/bin/mvn clean verify sonar:sonar \
                              -Dsonar.token=$SONAR_TOKEN \
                              -Dsonar.verbose=true
                        '''
                    }
                }
            }
        }
stage('MVN Nexus') {
    steps {
        withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
            configFileProvider([configFile(fileId: 'maven-settings-nexus', variable: 'SETTINGS_XML')]) {
                sh '''
                    echo "Affichage de la structure du r√©pertoire avant le d√©ploiement :"
                    ls -la

                    POM_FILE="kaddem/kaddem/pom.xml"

                    if [ -f "$POM_FILE" ]; then
                        echo "D√©ploiement Maven dans kaddem/kaddem"
                        cd kaddem/kaddem
                        $HOME/maven-local/bin/mvn deploy -Dmaven.test.skip=true --settings $SETTINGS_XML
                    else
                        echo "No pom.xml found in kaddem/kaddem! Cannot deploy."
                        exit 1
                    fi
                '''
            }
        }
    }
}



    }

    post {
        always {
            archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
        }
        success {
            echo '‚úÖ Pipeline completed successfully.'
        }
        failure {
            echo '‚ùå Pipeline failed. Check logs.'
        }
    }
}
