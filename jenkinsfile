pipeline {
    agent any

    tools {
    maven 'M2_HOME'

    }
      environment {
              registry = "192.168.33.10:8083"
              registryCredentials = "nexus"
              imageName = "kaddem-app"
              imageTag = "1.0"
          }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'MtaallahKhalil-4TWIN2-G6',
                    url: 'https://github.com/khalil27/4TWIN2-G6-Kaddem.git'
            }
        }

        stage('Build') {
            steps {
            dir('kaddem/kaddem') {
                sh 'mvn clean compile'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
            dir('kaddem/kaddem') {
                sh 'mvn test'
                }
            }
        }


           stage('SonarQube Analysis') {
                    steps {
                      script {
                        def scannerHome = tool 'scanner'
                        withSonarQubeEnv('SonarQube') {
                        dir('kaddem/kaddem'){
                          sh "${scannerHome}/bin/sonar-scanner"
                        }
                        }
                      }
                    }
                  }

                  stage('Package') {
                      steps {
                          dir('kaddem/kaddem') {
                              sh 'mvn clean package -DskipTests'
                          }
                      }
                  }
       stage('Docker Compose Build & Up') {
            steps {
                dir('kaddem/kaddem') {
                    sh 'docker-compose down || true'
                    sh 'docker-compose build'
                    sh 'docker-compose up -d'
                }
            }
        }
stage('Build Docker Image') {
    steps {
        script {
            dir('kaddem/kaddem') {
                sh "docker build -t ${imageName}:${imageTag} ."
                sh "docker tag ${imageName}:${imageTag} ${registry}/${imageName}:${imageTag}"
            }
        }
    }
}

    stage('Push to Nexus') {
        steps {
            withCredentials([usernamePassword(credentialsId: 'nexus', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                script {
                    sh """
                        docker login -u $USERNAME -p $PASSWORD ${registry}
                        docker push ${registry}/${imageName}:${imageTag}
                    """
                }
            }
        }
    }

stage('Run application ') {
steps{
script {
docker.withRegistry("http://"+registry, registryCredentials
) {
sh('docker pull $registry/kaddem-app:1.0 ')
sh('docker-compose up -d ')
}
}
}
}

stage('Check Monitoring (Prometheus & Grafana)') {
            steps {
                script {
                    echo "üì° V√©rification de l'√©tat de Prometheus et Grafana"
                    sh '''
                        echo "üîç Checking Prometheus at http://192.168.33.10:9090/targets"
                        curl -s -o /dev/null -w "%{http_code}" http://192.168.33.10:9090/targets

                        echo "üìä Checking Grafana at http://192.168.33.10:3000"
                        curl -s -o /dev/null -w "%{http_code}" http://192.168.33.10:3000
                    '''
                }
            }
        }




    }
}
